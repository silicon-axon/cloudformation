# Connection of SNS->SQS->Lambda 

AWSTemplateFormatVersion: "2010-09-09"
Resources: 
  SQSQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: "MyQueue"
      VisibilityTimeout: 60
      MessageRetentionPeriod: 604800

  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: "MyTopic"
      Subscription:
        - Endpoint: !GetAttSQSQueue.Arn
          Protocol: "sqs"

  SQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Statement:
          - Action:
              - "sqs:SendMessage"
            Effect: "Allow"
            Principal:
              Service: "sns.amazonaws.com"
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:sns:*:${AWS::AccountId}:MyTopic"

  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "LambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Ref LambdaLogGroup
              - Effect: "Allow"
                Action:
                  - "sqs:SendMessage"
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt SQSQueue.Arn

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          import json

          region = os.environ['AWS_REGION']

          def handler(event, context):
            print(event)

      Description: "SNS, SQS, and Lambda"
      FunctionName: "MyLambda"
      Handler: "index.handler"
      LoggingConfig:
        LogGroup: !Ref LambdaLogGroup
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: "python3.8"
      Timeout: 30

  LambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 60
      LogGroupName: !Sub "/mylambda"

  SQSLambdaSourceMapping:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      Enabled: true
      BatchSize: 1
      EventSourceArn: !GetAtt SQSQueue.Arn
      FunctionName: !GetAtt LambdaFunction.Arn
