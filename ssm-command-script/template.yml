AWSTemplateFormatVersion: "2010-09-09"
Description: "SSM Command Document to run scripts on EC2 hosts"

Resources:
  SSMCommand:
    Type: "AWS::SSM::Document"
    Properties:
      DocumentType: "Command"
      Content: |
        {
          "schemaVersion": "2.2",
          "description": "Runs echo",
          "parameters": {
            "text": {
              "description": "Text to echo",
              "type": "string",
              "default": "hello world"
            }
          },
          "mainSteps": [
            {
              "action": "aws:runShellScript",
              "name": "EchoOnLinux",
              "precondition": {
                "StringEquals": [ "platformType", "Linux" ]
              },
              "inputs": {
                "runCommand": [
                  " #!/bin/sh",
                  " echo \"{{text}}\""
                ]
              }
            },
            {
              "action": "aws:runPowerShellScript",
              "name": "EchoOnWindows",
              "precondition": {
                "StringEquals": [ "platformType", "Windows" ]
              },
              "inputs": {
                "runCommand": [
                  " Set-StrictMode -Version 3",
                  " Write-Host '{{action}}'",
                  " Set-StrictMode -Off"
                ]
              }
            }
          ]
        }

  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${AWS::StackName}-Role"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "logs:*"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action: "ssm:SendCommand"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeInstanceStatus"
                Resource: "*"

  Lambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          import json

          SSM_DOCUMENT_NAME = os.environ['SSM_DOCUMENT_NAME']

          def run_command(hostname):
            ssm = boto3.client('ssm')
            response = ssm.send_command(
                CloudWatchOutputConfig = {
                  'CloudWatchOutputEnabled': True
                },
                DocumentName = SSM_DOCUMENT_NAME,
                Parameters = {
                  "text": ['from lambda']
                },
                Targets = [
                  {
                    'Key': 'tag:Name',
                    'Values': [hostname]
                  }
                ],
                TimeoutSeconds = 30
              )
            return response


          def handler(event, context):
            return run_command('myec2host')

      Description: "Sample lambda to run SSM command document"
      Environment:
        Variables:
          STACK_NAME: !Sub "${AWS::StackName}"
          SSM_DOCUMENT_NAME: !Ref SSMCommand
      FunctionName: !Sub "${AWS::StackName}-Lambda"
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: "python3.8"
      Timeout: 30

Outputs:
  Lambda:
    Value: !Ref Lambda
