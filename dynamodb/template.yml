AWSTemplateFormatVersion: "2010-09-09"

Resources:
  Table:
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: "Retain"
    UpdateReplacePolicy: "Retain"
    Properties:
      TableName: "MyTable"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinition:
        - AttributeName: "partition_key"
          AttributeType: "S"
        - AttributeName: "sort_key"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "partition_key"
          KeyType: "HASH"
        - AttributeName: "sort_key"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: "MyIndex"
          KeySchema:
            - AttributeName: "sort_key"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 100
            WriteCapacityUnits: 100
      ProvisionedThroughput:
        ReadCapacityUnits: 100
        WriteCapacityUnits: 100


  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "LambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "logs:*"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action: "dynamodb:*"
                Resource:
                  - !GetAtt Table.Arn
                  - !Join ["/", [!GetAtt Table.Arn, "index", "*"]]


  Lambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          import json

          region = os.environ['AWS_REGION']
          dynamodb = boto3.client('dynamodb', region_name=region)

          def handler(event, context):
            print("hello!")

      Description: "DynamoDB and Lambda"
      Runtime: "python3.8"
      FunctionName: "MyLambda"
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Timeout: 30

Outputs:
  Table:
    Value: !Ref Table
  Lambda:
    Value: !Ref Lambda
